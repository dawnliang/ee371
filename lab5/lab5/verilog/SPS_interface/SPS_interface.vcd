$date
	Tue Dec  6 15:04:48 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module SPS_interface_testbench $end
$var wire 1 ! serialOut $end
$var wire 8 " parallelOut [7:0] $end
$var wire 1 # charSent $end
$var wire 1 $ charReceived $end
$var reg 1 % clk $end
$var reg 1 & load $end
$var reg 8 ' parallelIn [7:0] $end
$var reg 1 ( rst $end
$var reg 1 ) serialIn $end
$var reg 1 * transmitEnable $end
$scope module dut $end
$var wire 1 % clk $end
$var wire 1 & load $end
$var wire 8 + parallelIn [7:0] $end
$var wire 1 ( rst $end
$var wire 1 , sDataIn $end
$var wire 1 ) serialIn $end
$var wire 1 ! serialOut $end
$var wire 1 * transmitEnable $end
$var wire 1 - sDataOut $end
$var wire 8 . parallelOut [7:0] $end
$var wire 1 # charSent $end
$var wire 1 $ charReceived $end
$scope module piso $end
$var wire 1 % clk $end
$var wire 1 * enable $end
$var wire 1 & load $end
$var wire 8 / parallelIn [7:0] $end
$var wire 1 ( rst $end
$var wire 1 - serialOut $end
$var wire 11 0 data [10:0] $end
$var wire 1 # charSent $end
$var wire 1 1 bit_clk $end
$scope module counter $end
$var wire 1 % clk $end
$var wire 1 * enable $end
$var wire 1 ( rst $end
$var wire 4 2 frameProgress [3:0] $end
$var wire 1 # endFrame $end
$var wire 1 1 bit_clk $end
$scope module bitIdent $end
$var wire 1 * enable $end
$var wire 1 ( rst $end
$var wire 1 # endFrame $end
$var wire 1 1 clk $end
$var reg 4 3 frameProgress [3:0] $end
$upscope $end
$scope module bitSample $end
$var wire 1 % clk $end
$var wire 1 * enable $end
$var wire 1 ( rst $end
$var wire 1 1 bit_clk $end
$var reg 4 4 bitProgress [3:0] $end
$upscope $end
$upscope $end
$scope module piso $end
$var wire 1 1 bit_clk $end
$var wire 1 % clk $end
$var wire 1 & load $end
$var wire 8 5 parallelIn [7:0] $end
$var wire 1 ( rst $end
$var wire 1 - serialOut $end
$var reg 11 6 data [10:0] $end
$upscope $end
$upscope $end
$scope module sipo $end
$var wire 1 % clk $end
$var wire 1 ( rst $end
$var wire 1 , serialIn $end
$var wire 8 7 parallelOut [7:0] $end
$var wire 10 8 data [9:0] $end
$var wire 1 $ charReceived $end
$var wire 1 9 bit_clk $end
$var reg 1 : enable $end
$scope module SIPO $end
$var wire 1 ( rst $end
$var wire 1 , serialIn $end
$var wire 8 ; parallelOut [7:0] $end
$var wire 1 9 clk $end
$var reg 10 < data [9:0] $end
$upscope $end
$scope module counter $end
$var wire 1 % clk $end
$var wire 1 : enable $end
$var wire 1 ( rst $end
$var wire 4 = frameProgress [3:0] $end
$var wire 1 $ endFrame $end
$var wire 1 9 bit_clk $end
$scope module bitIdent $end
$var wire 1 : enable $end
$var wire 1 ( rst $end
$var wire 1 $ endFrame $end
$var wire 1 9 clk $end
$var reg 4 > frameProgress [3:0] $end
$upscope $end
$scope module bitSample $end
$var wire 1 % clk $end
$var wire 1 : enable $end
$var wire 1 ( rst $end
$var wire 1 9 bit_clk $end
$var reg 4 ? bitProgress [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ?
b0 >
b0 =
b1111111111 <
b11111111 ;
0:
09
b1111111111 8
b11111111 7
b11111111111 6
b10101010 5
b0 4
b0 3
b0 2
01
b11111111111 0
b10101010 /
b11111111 .
1-
1,
b10101010 +
x*
1)
1(
b10101010 '
x&
0%
0$
0#
b11111111 "
1!
$end
#5
0*
0&
0(
1%
#10
0%
#15
b11010101001 0
b11010101001 6
1&
1%
#20
0%
#25
1*
0&
1%
#30
0%
#35
1:
0,
0)
b1 4
1%
#40
0%
#45
b1 ?
b10 4
1%
#50
0%
#55
b11 4
b10 ?
1%
#60
0%
#65
b11 ?
b100 4
1%
#70
0%
#75
b101 4
b100 ?
1%
#80
0%
#85
b101 ?
b110 4
1%
#90
0%
#95
b1 2
b1 3
11
b111 4
b110 ?
1%
#100
0%
#105
b1 =
b1 >
b1111111110 8
b1111111110 <
0!
0-
19
b111 ?
01
b1000 4
b11101010100 0
b11101010100 6
1%
#110
0%
#115
b1001 4
09
b1000 ?
1%
#120
0%
#125
b1001 ?
b1010 4
1%
#130
0%
#135
b1011 4
b1010 ?
1%
#140
0%
#145
b1011 ?
b1100 4
1%
#150
0%
#155
b1101 4
b1100 ?
1%
#160
0%
#165
b1101 ?
b1110 4
1%
#170
0%
#175
b1111 4
b1110 ?
1%
#180
0%
#185
b1111 ?
b0 4
1%
#190
0%
#195
b1 4
b0 ?
1%
#200
0%
#205
b1 ?
b10 4
1%
#210
0%
#215
b11 4
b10 ?
1%
#220
0%
#225
b11 ?
b100 4
1%
#230
0%
#235
b101 4
b100 ?
1%
#240
0%
#245
b101 ?
b110 4
1%
#250
0%
#255
b10 2
b10 3
11
b111 4
b110 ?
1%
#260
0%
#265
b11111110 "
b11111110 .
b11111110 7
b11111110 ;
b1111111100 8
b1111111100 <
b10 =
b10 >
19
b111 ?
01
b1000 4
b11110101010 0
b11110101010 6
1%
#270
0%
#275
b1001 4
09
b1000 ?
1%
#280
0%
#285
b1001 ?
b1010 4
1%
#290
0%
#295
b1011 4
b1010 ?
1%
#300
0%
#305
b1011 ?
b1100 4
1%
#310
0%
#315
b1101 4
b1100 ?
1%
#320
0%
#325
b1101 ?
b1110 4
1%
#330
0%
#335
b1111 4
b1110 ?
1%
#340
0%
#345
b1111 ?
b0 4
1%
#350
0%
#355
b1 4
b0 ?
1%
#360
0%
#365
b1 ?
b10 4
1%
#370
0%
#375
b11 4
b10 ?
1%
#380
0%
#385
b11 ?
b100 4
1%
#390
0%
#395
b101 4
b100 ?
1%
#400
0%
#405
b101 ?
b110 4
1%
#410
0%
#415
b11 2
b11 3
11
b111 4
b110 ?
1%
#420
0%
#425
b11111100 "
b11111100 .
b11111100 7
b11111100 ;
b11 =
b11 >
b1111111000 8
b1111111000 <
1!
1-
19
b111 ?
01
b1000 4
b11111010101 0
b11111010101 6
1%
#430
0%
#435
b1001 4
09
b1000 ?
1%
#440
0%
#445
b1001 ?
b1010 4
1%
#450
0%
#455
b1011 4
b1010 ?
1%
#460
0%
#465
b1011 ?
b1100 4
1%
#470
0%
#475
b1101 4
b1100 ?
1%
#480
0%
#485
b1101 ?
b1110 4
1%
#490
0%
#495
b1111 4
b1110 ?
1%
#500
0%
#505
b1111 ?
b0 4
1%
#510
0%
#515
b1 4
b0 ?
1%
#520
0%
#525
b1 ?
b10 4
1%
#530
0%
#535
b11 4
b10 ?
1%
#540
0%
#545
b11 ?
b100 4
1%
#550
0%
#555
b101 4
b100 ?
1%
#560
0%
#565
b101 ?
b110 4
1%
#570
0%
#575
b100 2
b100 3
11
b111 4
b110 ?
1%
#580
0%
#585
b11111000 "
b11111000 .
b11111000 7
b11111000 ;
b1111110000 8
b1111110000 <
b100 =
b100 >
0!
0-
19
b111 ?
01
b1000 4
b11111101010 0
b11111101010 6
1%
#590
0%
#595
b1001 4
09
b1000 ?
1%
#600
0%
#605
b1001 ?
b1010 4
1%
#610
0%
#615
b1011 4
b1010 ?
1%
#620
0%
#625
b1011 ?
b1100 4
1%
#630
0%
#635
b1101 4
b1100 ?
1%
#640
0%
#645
b1101 ?
b1110 4
1%
#650
0%
#655
b1111 4
b1110 ?
1%
#660
0%
#665
b1111 ?
b0 4
1%
#670
0%
#675
b1 4
b0 ?
1%
#680
0%
#685
b1 ?
b10 4
1%
#690
0%
#695
b11 4
b10 ?
1%
#700
0%
#705
b11 ?
b100 4
1%
#710
0%
#715
b101 4
b100 ?
1%
#720
0%
#725
b101 ?
b110 4
1%
#730
0%
#735
b101 2
b101 3
11
b111 4
b110 ?
1%
#740
0%
#745
b11110000 "
b11110000 .
b11110000 7
b11110000 ;
b101 =
b101 >
b1111100000 8
b1111100000 <
1!
1-
19
b111 ?
01
b1000 4
b11111110101 0
b11111110101 6
1%
#750
0%
#755
b1001 4
09
b1000 ?
1%
#760
0%
#765
b1001 ?
b1010 4
1%
#770
0%
#775
b1011 4
b1010 ?
1%
#780
0%
#785
b1011 ?
b1100 4
1%
#790
0%
#795
b1101 4
b1100 ?
1%
#800
0%
#805
b1101 ?
b1110 4
1%
#810
0%
#815
b1111 4
b1110 ?
1%
#820
0%
#825
b1111 ?
b0 4
1%
#830
0%
#835
b1 4
b0 ?
1%
#840
0%
#845
b1 ?
b10 4
1%
#850
0%
#855
b11 4
b10 ?
1%
#860
0%
#865
b11 ?
b100 4
1%
#870
0%
#875
b101 4
b100 ?
1%
#880
0%
#885
b101 ?
b110 4
1%
#890
0%
#895
b110 2
b110 3
11
b111 4
b110 ?
1%
#900
0%
#905
b11100000 "
b11100000 .
b11100000 7
b11100000 ;
b1111000000 8
b1111000000 <
b110 =
b110 >
0!
0-
19
b111 ?
01
b1000 4
b11111111010 0
b11111111010 6
1%
#910
0%
#915
b1001 4
09
b1000 ?
1%
#920
0%
#925
b1001 ?
b1010 4
1%
#930
0%
#935
b1011 4
b1010 ?
1%
#940
0%
#945
b1011 ?
b1100 4
1%
#950
0%
#955
b1101 4
b1100 ?
1%
#960
0%
#965
b1101 ?
b1110 4
1%
#970
0%
#975
b1111 4
b1110 ?
1%
#980
0%
#985
b1111 ?
b0 4
1%
#990
0%
#995
b1 4
b0 ?
1%
#1000
0%
#1005
b1 ?
b10 4
1%
#1010
0%
#1015
b11 4
b10 ?
1%
#1020
0%
#1025
b11 ?
b100 4
1%
#1030
0%
#1035
b101 4
b100 ?
1%
#1040
0%
#1045
b101 ?
b110 4
1%
#1050
0%
#1055
b111 2
b111 3
11
b111 4
b110 ?
1%
#1060
0%
#1065
b11000000 "
b11000000 .
b11000000 7
b11000000 ;
b111 =
b111 >
b1110000000 8
b1110000000 <
1!
1-
19
b111 ?
01
b1000 4
b11111111101 0
b11111111101 6
1%
#1070
0%
#1075
b1001 4
09
b1000 ?
1%
#1080
0%
#1085
b1001 ?
b1010 4
1%
#1090
0%
#1095
b1011 4
b1010 ?
1%
